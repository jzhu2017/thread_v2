include /etc/nginx/mime.types; 



# the upstream component nginx needs to connect to

upstream django {

    server unix:///var/www/html/thread_v2/threadbackend/run/thread.sock; # for a file socket

    # server 127.0.0.1:8001; # for a web port socket (we'll use this first)

}



# configuration of the server

server {

    # the port your site will be served on

    # the domain name it will serve for
    #server_name 0.0.0.0;
    server_name threadcornell.com; # substitute your machine's IP address or FQDN

    charset     utf-8;



    # max upload size

    client_max_body_size 75M;   # adjust to taste



    # Django media

    location /media  {

        alias /var/www/html/thread_v2/threadbackend/media;  # your Django project's media files - amend as required

    }



    location /static {

        autoindex on;

alias /var/www/html/thread_v2/threadbackend/static/; # your Django project's static files - amend as required

    }

    #Django admin

    location /static/admin {

        alias /var/www/html/thread_v2/venv/lib/python3.6/site-packages/django/contrib/admin/media/;

    }

 

    location /static/admin/js/ {

default_type text/javascript;  

alias /var/www/html/thread_v2/threadbackend/static/admin/js/;

    }

    

    location /static/admin/css/ {  

default_type text/css;  

alias /var/www/html/thread_v2/threadbackend/static/admin/css/; 

    }

    

    # Finally, send all non-media requests to the Django server.

    location / {

        uwsgi_pass  django;
	#uwsgi_modifier 9;
        include     /etc/nginx/uwsgi_params; # the uwsgi_params file you installed

    }

    #iframe clickjack solution

    #add_header X-Frame-Options "allow-from http://threadcornell.com";

    #add_header X-Frame-Options "";


    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/threadcornell.com/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/threadcornell.com/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}



server {
    if ($host = threadcornell.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot



    listen      80;
    server_name threadcornell.com;
    return 404; # managed by Certbot


}